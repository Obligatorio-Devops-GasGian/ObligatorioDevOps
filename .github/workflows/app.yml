name: Build and Push Docker Images to ECR

on:
  workflow_run:
    workflows: ["AWS Credentials Test and Terraform Plan"]
    types:
      - completed

jobs:
  docker:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Run functional test
        run: |
          pytest test_funcional.py

      - name: Run SonarCloud analysis
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=obligatorio-devops-gasgian
            -Dsonar.projectKey=Obligatorio-Devops-GasGian_ObligatorioDevOps
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Wait for Quality Gate result
        uses: SonarSource/sonarcloud-quality-gate-action@master
        with:
          scanMetadataReportFile: .scannerwork/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Solo se llega aquí si pasó todo
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push vote image
        run: |
          docker build -t vote ./vote
          docker tag vote:latest ${{ steps.login-ecr.outputs.registry }}/vote:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/vote:latest

      - name: Build and push result image
        run: |
          docker build -t result ./result
          docker tag result:latest ${{ steps.login-ecr.outputs.registry }}/result:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/result:latest

      - name: Build and push worker image
        run: |
          docker build -t worker ./worker
          docker tag worker:latest ${{ steps.login-ecr.outputs.registry }}/worker:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/worker:latest

      - name: Build and push seed-data image
        run: |
          docker build -t seed-data ./seed-data
          docker tag seed-data:latest ${{ steps.login-ecr.outputs.registry }}/seed-data:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/seed-data:latest
